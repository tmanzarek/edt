// Тимур - старт - 29 мая 2020 г.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектыНазначения				= Параметры.ОбъектыНазначения;
	КоличествоОбъектовНазначения	= ОбъектыНазначения.Количество();
	Если КоличествоОбъектовНазначения = 1 Тогда
		Документ		= ОбъектыНазначения[0];
		Объект.Документ	= Документ;  
	Иначе
		Отказ		= Истина;
	КонецЕсли;		

	Если ЗначениеЗаполнено(Документ) Тогда
		// Тимур - старт - 3 июн. 2020 г.
		//СуммаДокумента			= ?(ТипЗнч(Документ) = Тип("ДокументСсылка.ОперацияБух"), Документ.СуммаОперации, Документ.СуммаДокумента);
		ТипДокумента	= ТипЗнч(Документ);
		Если ТипДокумента <> Тип("ДокументСсылка.ТребованиеНакладная") Тогда
			СуммаДокумента		= ?(ТипЗнч(Документ) = Тип("ДокументСсылка.ОперацияБух"), Документ.СуммаОперации, Документ.СуммаДокумента);
		КонецЕсли;
		// финиш - 3 июн. 2020 г.
		РаспределенныеЗатраты	= Объект.РаспределенныеЗатраты;
		Выборка					= ВыборкаЧтениеЗатратИзБД(Документ);
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(РаспределенныеЗатраты.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	// Тимур - старт - 3 июн. 2020 г.
	//Если СуммаДокумента <> Объект.РаспределенныеЗатраты.Итог("Сумма") Тогда
	Если СуммаДокумента И СуммаДокумента <> Объект.РаспределенныеЗатраты.Итог("Сумма") Тогда
	// финиш - 3 июн. 2020 г.
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Распределенная сумма затрат не равна сумме документа.'"));
	КонецЕсли;
	Попытка
		СохранитьНаСервере();
		Модифицированность	= Ложь;
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка при записи распределенных затрат: " + ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Если Модифицированность Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ВопросПриЗакрытииЗавершение", ЭтотОбъект),
			"В таблице ""Распределяемые затраты"" присутствуют несохраненные данные. При закрытии формы они будут потеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗатраты(Команда)
	ПолучитьЗатратыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗатрату(Команда)
    Оповещение = Новый ОписаниеОповещения("ПослеВводаСуммы", ЭтотОбъект);
    ПоказатьВводЧисла(Оповещение,, "Введите сумму затраты",15,2);    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьЗатратыНаСервере()
	Документ	= Объект.Документ;  
	Если ЗначениеЗаполнено(Документ) Тогда		// Тимур - старт - 3 июн. 2020 г.
		//СуммаДокумента			= ?(ТипЗнч(Документ) = Тип("ДокументСсылка.ОперацияБух"), Документ.СуммаОперации, Документ.СуммаДокумента);
		ТипДокумента	= ТипЗнч(Документ);
		Если ТипДокумента <> Тип("ДокументСсылка.ТребованиеНакладная") Тогда
			СуммаДокумента		= ?(ТипЗнч(Документ) = Тип("ДокументСсылка.ОперацияБух"), Документ.СуммаОперации, Документ.СуммаДокумента);
		КонецЕсли;
		// финиш - 3 июн. 2020 г.
		РаспределенныеЗатраты	= Объект.РаспределенныеЗатраты;
		Выборка					= ВыборкаЧтениеЗатратИзБД(Документ);
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(РаспределенныеЗатраты.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыборкаЧтениеЗатратИзБД(Документ)
	Запрос = Новый Запрос(ТекстЗапросаЧтениеРаспределенныхЗатратДокумента());
	Запрос.УстановитьПараметр("Документ", Документ);
	Возврат Запрос.Выполнить().Выбрать(); 	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаЧтениеРаспределенныхЗатратДокумента()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ДополнительныеСведения.Значение КАК Строка(1024)) КАК ЗначениеСвойства,
	|	ДополнительныеСведения.Свойство.Наименование КАК НаименованиеСвойства,
	|	ПОДСТРОКА(ВЫРАЗИТЬ(ДополнительныеСведения.Значение КАК Строка(1024)), 1, 10) КАК КодСклада,
	|	ПОДСТРОКА(ВЫРАЗИТЬ(ДополнительныеСведения.Значение КАК Строка(1024)), 14, 9) КАК КодСтатьиЗатрат,
	|	ПОДСТРОКА(ВЫРАЗИТЬ(ДополнительныеСведения.Значение КАК Строка(1024)), 26, 16) КАК СуммаСтрока
	|ПОМЕСТИТЬ ЗатратыИзБД
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект = &Документ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Ссылка,
	|	Склады.Код КАК Код
	|ПОМЕСТИТЬ СписокСкладов
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗатратыИзБД КАК ЗатратыИзБД
	|		ПО Склады.Код = ЗатратыИзБД.КодСклада
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Код
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка,
	|	СтатьиЗатрат.Код КАК Код
	|ПОМЕСТИТЬ СписокСтатейЗатрат
	|ИЗ
	|	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗатратыИзБД КАК ЗатратыИзБД
	|		ПО СтатьиЗатрат.Код = ЗатратыИзБД.КодСтатьиЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Код
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗатратыИзБД.НаименованиеСвойства,
	|	ЗатратыИзБД.ЗначениеСвойства,
	|	СписокСкладов.Ссылка КАК Склад,
	|	СписокСтатейЗатрат.Ссылка КАК СтатьяЗатрат,
	|" + ТекстЗапросаИзСтрокиВЧисло("ЗатратыИзБД.СуммаСтрока", 16) + " КАК Сумма
	|ИЗ
	|	ЗатратыИзБД КАК ЗатратыИзБД
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокСкладов КАК СписокСкладов
	|		ПО ЗатратыИзБД.КодСклада = СписокСкладов.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокСтатейЗатрат КАК СписокСтатейЗатрат
	|		ПО ЗатратыИзБД.КодСтатьиЗатрат = СписокСтатейЗатрат.Код
	|УПОРЯДОЧИТЬ ПО
	|	НаименованиеСвойства";
	Возврат ТекстЗапроса;
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаИзСтрокиВЧисло(пИмяПоля, пДлинаСтроки, пСимволРазделителя=",")
    лТекст="ВЫБОР ";
    Для лДлинаЦелойЧасти=0 По пДлинаСтроки Цикл
        Если лДлинаЦелойЧасти=пДлинаСтроки Тогда 
            лТекст=лТекст+"ИНАЧЕ"+Символы.ПС;
        Иначе
            лТекст=лТекст+"КОГДА ПОДСТРОКА("+пИмяПоля+", "+(лДлинаЦелойЧасти+1)+", 1)="""+пСимволРазделителя+""" ИЛИ ПОДСТРОКА("+пИмяПоля+", "+(лДлинаЦелойЧасти+1)+", 1)="""" ТОГДА "+Символы.ПС;
        КонецЕсли; 
        Если лДлинаЦелойЧасти=0 Тогда лТекст=лТекст+"    0"+Символы.ПС; КонецЕсли; 
        Для лИнд=1 По лДлинаЦелойЧасти Цикл
            лТекст=лТекст+"    ВЫБОР "+Символы.ПС;
            Для лЦифра=0 По 9 Цикл
                лТекст=лТекст+"    КОГДА ПОДСТРОКА("+пИмяПоля+", "+лИнд+", 1)="""+лЦифра+""" ТОГДА "+лЦифра+Символы.ПС;
            КонецЦикла;
            лТекст=лТекст+"    ИНАЧЕ 0 КОНЕЦ"+?(лИнд=лДлинаЦелойЧасти, "", "*"+Формат(Pow(10, лДлинаЦелойЧасти-лИнд), "ЧРД=.; ЧГ=0")+"+")+Символы.ПС;
        КонецЦикла;
        Для лИнд=лДлинаЦелойЧасти+2 По пДлинаСтроки Цикл
            лТекст=лТекст+"+ ВЫБОР";
            Для лЦифра=0 По 9 Цикл
                лТекст=лТекст+"    КОГДА ПОДСТРОКА("+пИмяПоля+", "+лИнд+", 1)="""+лЦифра+""" ТОГДА "+лЦифра+Символы.ПС;
            КонецЦикла;
            лТекст=лТекст+"    ИНАЧЕ 0 КОНЕЦ"+?(лИнд=лДлинаЦелойЧасти, "", "/"+Формат(Pow(10, лИнд-лДлинаЦелойЧасти-1), "ЧРД=.; ЧГ=0"))+Символы.ПС;
        КонецЦикла;
    КонецЦикла;
    лТекст=лТекст+"КОНЕЦ";
    Возврат лТекст;
КонецФункции

&НаКлиенте
Процедура ВопросПриЗакрытииЗавершение(РезультатВопроса, ПараметрыЗаписи) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()

	ТЗДляЗаписи	= Новый ТаблицаЗначений;
	Колонки		= ТЗДляЗаписи.Колонки;
	Колонки.Добавить("Свойство");
	Колонки.Добавить("Значение");
	
	ОбработкаОбъект	= РеквизитФормыВЗначение("Объект"); 
	ЗатратыПодготовленныеДляЗаписи = ВыборкаПоготовленныеЗатраты(ОбработкаОбъект.РаспределенныеЗатраты);
	
	ДополнительныеРеквизитыИСведенияМенеджер	= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения;
	Префикс										= ОбработкаОбъект.Документ.Метаданные().Имя + "_";
	Разделитель									= "$@$"; 
	
	Пока ЗатратыПодготовленныеДляЗаписи.Следующий() Цикл
		
		ИмяДопСвойства	= "Строка" + Формат(ЗатратыПодготовленныеДляЗаписи.НомерСтроки, "ЧЦ=5;ЧВН=;ЧГ=;");
		ДопСвойство		= ДополнительныеРеквизитыИСведенияМенеджер.НайтиПоРеквизиту("Имя", Префикс + ИмяДопСвойства);
		Значение		= ЗатратыПодготовленныеДляЗаписи.КодСклада + Разделитель + ЗатратыПодготовленныеДляЗаписи.КодСтатьиЗатрат + Разделитель
			   + Формат(ЗатратыПодготовленныеДляЗаписи.Сумма, "ЧЦ=15;ЧДЦ=2;ЧВН=;ЧГ=;") + Разделитель
			   + ЗатратыПодготовленныеДляЗаписи.Склад.УникальныйИдентификатор() + Разделитель 
			   + ЗатратыПодготовленныеДляЗаписи.СтатьяЗатрат.УникальныйИдентификатор() + Разделитель
			   + ЗатратыПодготовленныеДляЗаписи.НаименованиеСклада + Разделитель + ЗатратыПодготовленныеДляЗаписи.НаименованиеСтатьиЗатрат;
		
		НоваяСтрока				= ТЗДляЗаписи.Добавить();
		НоваяСтрока.Свойство	= ДопСвойство;
		НоваяСтрока.Значение	= Значение; 
		
	КонецЦикла;
	
	Документ	= Объект.Документ;
	ОчиститьЗначенияДопСвойств(Документ);
	
	УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(Документ, ТЗДляЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыборкаПоготовленныеЗатраты(РаспределенныеЗатраты)
	Запрос = Новый Запрос(ТекстЗапросаПодготовкаЗатратДляЗаписи());
	Запрос.УстановитьПараметр("РаспределенныеЗатраты", РаспределенныеЗатраты);
	Возврат Запрос.Выполнить().Выбрать(); 	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаПодготовкаЗатратДляЗаписи()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РаспределенныеЗатраты.НомерСтроки,
	|	РаспределенныеЗатраты.Склад,
	|	РаспределенныеЗатраты.СтатьяЗатрат,
	|	РаспределенныеЗатраты.Сумма
	|ПОМЕСТИТЬ РаспределенныеЗатраты
	|ИЗ
	|	&РаспределенныеЗатраты КАК РаспределенныеЗатраты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределенныеЗатраты.НомерСтроки КАК НомерСтроки,
	|	РаспределенныеЗатраты.Склад КАК Склад,
	|	ВЫРАЗИТЬ(РаспределенныеЗатраты.Склад КАК Справочник.Склады).Код КАК КодСклада,
	|	ВЫРАЗИТЬ(РаспределенныеЗатраты.Склад КАК Справочник.Склады).Наименование КАК НаименованиеСклада,
	|	РаспределенныеЗатраты.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВЫРАЗИТЬ(РаспределенныеЗатраты.СтатьяЗатрат КАК Справочник.СтатьиЗатрат).Код КАК КодСтатьиЗатрат,
	|	ВЫРАЗИТЬ(РаспределенныеЗатраты.СтатьяЗатрат КАК Справочник.СтатьиЗатрат).Наименование КАК НаименованиеСтатьиЗатрат,
	|	РаспределенныеЗатраты.Сумма
	|ИЗ
	|	РаспределенныеЗатраты КАК РаспределенныеЗатраты";
	Возврат ТекстЗапроса;
КонецФункции

&НаСервереБезКонтекста
Процедура ОчиститьЗначенияДопСвойств(ДокументСсылка)
	НаборЗаписей	= РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСуммы(Результат, Параметры) Экспорт
    Если НЕ (Результат = Неопределено ИЛИ Результат = 0) Тогда
	  	НоваяСтрока					= Объект.РаспределенныеЗатраты.Добавить();
		НоваяСтрока.Склад			= Элементы.Склады.ТекущиеДанные.Ссылка;
		НоваяСтрока.СтатьяЗатрат	= Элементы.СтатьиЗатрат.ТекущиеДанные.Ссылка;
    	НоваяСтрока.Сумма			= Результат;
    КонецЕсли;
КонецПроцедуры	

#КонецОбласти

// финиш - 29 мая 2020 г.
