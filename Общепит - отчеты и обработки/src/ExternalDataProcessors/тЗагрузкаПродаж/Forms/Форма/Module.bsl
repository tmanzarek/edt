// Тимур - старт - 20.01.2020

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЧтоЗагружаем = "delivery club";
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПутьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка				= Ложь;
	Диалог								= Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок					= "Укажите файл для загрузки:";
	Диалог.Фильтр						= "Текстовый файл с разделителями файлы (*.csv)|*.csv";
	Диалог.ПроверятьСуществованиеФайла	= Истина;
	Диалог.ПолноеИмяФайла				= Путь;
	Если Диалог.Выбрать() Тогда
		Путь = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Путь);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	Если ПустаяСтрока(ЧтоЗагружаем) ИЛИ ПустаяСтрока(Путь) Тогда
		Сообщение		= Новый СообщениеПользователю;
		Сообщение.Текст	= "Не заполнены объязательные поля ""Что заполняем"" или ""Путь""!";
		Сообщение.Сообщить();
	Иначе
		ЗагрузитьНаСервере(ЧтоЗагружаем, Путь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОсновныеПроцедурыИФункцииЗагрузки

&НаСервереБезКонтекста
Процедура ЗагрузитьНаСервере(ЧтоЗагружаем, Путь)
	Перем Колонки;
	ТЗ = СоздатьТЗ(Колонки);
	ПрочитатьФайл(Путь, ТЗ, Колонки);
	ОбработатьТЗ(ТЗ);
	ЗагрузитьВДокументы(ТЗ);
КонецПроцедуры // ЗагрузитьНаСервере()

&НаСервереБезКонтекста
Функция СоздатьТЗ(Колонки)
	ТЗ		= Новый ТаблицаЗначений;
	Колонки	= ТЗ.Колонки;
	Колонки.Добавить("КодЗаказа");
	Колонки.Добавить("КодРесторана");
	Колонки.Добавить("НазваниеРесторана");
	Колонки.Добавить("АдресКлиента");
	Колонки.Добавить("ТелефонКлиента");
	Колонки.Добавить("СуммаБезСкидки");
	Колонки.Добавить("Скидка");
	Колонки.Добавить("Стоимость");
	Колонки.Добавить("СтоимостьТары");
	Колонки.Добавить("СтоимостьДоставки");
	Колонки.Добавить("СервисныйСборРесторана");
	Колонки.Добавить("КурьерПлатит");
	Колонки.Добавить("СпособОплаты");
	Колонки.Добавить("Позиции");
	Колонки.Добавить("ПозицииЗаказа");
	Колонки.Добавить("ОжидаемаяДатаДоставки");
	Колонки.Добавить("ОжидаемоеВремяДоставки");
	Колонки.Добавить("ТипДоставки");
	Колонки.Добавить("Статус");
	Колонки.Добавить("ПричинаОтмены");
	Возврат ТЗ;
КонецФункции // СоздатьТЗ()

&НаСервереБезКонтекста
Процедура ПрочитатьФайл(ПутьКФайлу, ТЗ, Колонки)
	Текст = Новый ЧтениеТекста(ПутьКФайлу);
	Для Счетчик = 1 По 3 Цикл
		// строка № 1 - служебная информация
		// строка № 2 - заголовки полей
		// строка № 3 - первая строка с данными
		СтрокаТекста = Текст.ПрочитатьСтроку();
	КонецЦикла;
	Пока СтрокаТекста <> Неопределено Цикл
		НоваяСтрокаТЗ = ТЗ.Добавить();
		Для каждого Колонка Из Колонки Цикл
			ПозицияРазделителя = Найти(СтрокаТекста, ";");
			ИмяКолонки = Колонка.Имя;
			Если ПозицияРазделителя Тогда
				ЗначениеПоля = Лев(СтрокаТекста, ПозицияРазделителя - 1);
				Если ИмяКолонки = "Позиции" Тогда
					СтрокаТекста			= ПреобразоватьСтрокуТекста(СтрокаТекста, ЗначениеПоля);
				КонецЕсли;
				НоваяСтрокаТЗ[ИмяКолонки]	= СокрЛП(ЗначениеПоля);
				СтрокаТекста				= Сред(СтрокаТекста, ПозицияРазделителя + 1);
			Иначе
				НоваяСтрокаТЗ[ИмяКолонки]	= СокрЛП(СтрокаТекста);
			КонецЕсли;
		КонецЦикла;
		СтрокаТекста = Текст.ПрочитатьСтроку();
	КонецЦикла;
	Текст.Закрыть();
КонецПроцедуры // ПрочитатьФайл()

&НаСервереБезКонтекста
Процедура ОбработатьТЗ(ТЗ)
	Для каждого СтрокаТЗ Из ТЗ Цикл
		СтрокаТЗ.АдресКлиента			= СтрЗаменить(СтрокаТЗ.АдресКлиента, """", "");
		СтрокаТЗ.КурьерПлатит			= Число(СтрокаТЗ.КурьерПлатит);
		СтрокаТЗ.НазваниеРесторана		= СтрЗаменить(СтрокаТЗ.НазваниеРесторана, """", "");
		СтрокаТЗ.ОжидаемаяДатаДоставки	= СтрокуВДату(СтрокаТЗ.ОжидаемаяДатаДоставки);
		СтрокаТЗ.Позиции				= Число(СтрокаТЗ.Позиции);
		СтрокаТЗ.СервисныйСборРесторана	= Число(СтрокаТЗ.СервисныйСборРесторана);
		СтрокаТЗ.Скидка					= Число(СтрокаТЗ.Скидка);
		СтрокаТЗ.СпособОплаты			= СтрЗаменить(СтрокаТЗ.СпособОплаты, """", "");
		СтрокаТЗ.Стоимость				= Число(СтрокаТЗ.Стоимость);
		СтрокаТЗ.СтоимостьДоставки		= Число(СтрокаТЗ.СтоимостьДоставки);
		СтрокаТЗ.СтоимостьТары			= Число(СтрокаТЗ.СтоимостьТары);
		СтрокаТЗ.СуммаБезСкидки			= Число(СтрокаТЗ.СуммаБезСкидки);
		СтрокаТЗ.ТелефонКлиента			= СтрЗаменить(СтрокаТЗ.ТелефонКлиента, """", "");
	КонецЦикла;
КонецПроцедуры // ОбработатьТЗ()

&НаСервереБезКонтекста
Процедура ЗагрузитьВДокументы(ТЗ)
	// На каждый заказ создается отдельный документ
	ТЗ.Сортировать("ОжидаемаяДатаДоставки");
	
	ХозрасчетныйМенеджер			= ПланыСчетов.Хозрасчетный;
	НоменклатураМенеджер			= Справочники.Номенклатура;
	СкладыМенеджер					= Справочники.Склады;
	ОбщепитКассыККММенеджер			= Справочники.ОбщепитКассыККМ;
	ОтчетОРозничныхПродажахМенеджер	= Документы.ОтчетОРозничныхПродажах;
	Организация						= Справочники.Организации.ОрганизацияПоУмолчанию();
	ВидОплаты						= Справочники.ВидыОплатОрганизаций.НайтиПоНаименованию("Деливери клаб");
	
	ОбщиеСвойстваДокумента		= Новый Структура("ВидОперации,Организация,СчетКасса,СтатьяДвиженияДенежныхСредств,ВалютаДокумента,КурсДокумента,КратностьДокумента,СуммаВключаетНДС,Ответственный",
		Перечисления.ВидыОперацийОтчетОРозничныхПродажах.ОтчетККМОПродажах, Организация, ХозрасчетныйМенеджер.КассаОрганизации, Справочники.СтатьиДвиженияДенежныхСредств.РозничнаяВыручка,
		Константы.ВалютаРегламентированногоУчета.Получить(), 1, 1, Ложь, ПараметрыСеанса.ТекущийПользователь);
	ОбщиеСвойстваСтрокиТЧТовары	= Новый Структура("СтавкаНДС,СчетУчета,СчетДоходов,СчетУчетаНДСПоРеализации,СчетРасходов,Коэффициент",
		Перечисления.СтавкиНДС.БезНДС, ХозрасчетныйМенеджер.ТоварыНаСкладах,ХозрасчетныйМенеджер.ВыручкаНеЕНВД, ХозрасчетныйМенеджер.Продажи_НДС,ХозрасчетныйМенеджер.СебестоимостьПродажНеЕНВД, 1);
	
	Всего						= ТЗ.Количество();
	СписокНезагруженныхЗаказов	= "";
	СчетчикНезагруженныхЗаказов	= 0;
	СчетчикЗагруженныхЗаказов	= 0;
	Счетчик						= 0;
	
	Для каждого СтрокаТЗ Из ТЗ Цикл
		Счетчик = Счетчик + 1;
		Если СтрокаТЗ.Статус <> "Доставлен" Тогда
			СчетчикНезагруженныхЗаказов	= СчетчикНезагруженныхЗаказов + 1;
			СписокНезагруженныхЗаказов	= СписокНезагруженныхЗаказов + СтрокаТЗ.КодЗаказа + "  ";
			Продолжить;
		КонецЕсли;
		
		КодЗаказа	= СтрокаТЗ.КодЗаказа;
		
		Документ	= НайтиСоздатьДокумент(КодЗаказа, ОтчетОРозничныхПродажахМенеджер);
		ЗаполнитьЗначенияСвойств(Документ, ОбщиеСвойстваДокумента);
		
		Документ.Дата				= СтрокаТЗ.ОжидаемаяДатаДоставки;
		НазваниеРесторана			= СтрокаТЗ.НазваниеРесторана;
		Документ.Склад				= СкладыМенеджер.НайтиПоНаименованию(НазваниеРесторана);
		Документ.ОбщепитКассаККМ	= ОбщепитКассыККММенеджер.НайтиПоНаименованию(НазваниеРесторана);
		СтоимостьЗаказа				= СтрокаТЗ.Стоимость;
		//Документ.СуммаДокумента	= СтрокаТЗ.Стоимость;
		Документ.Комментарий		= "Код заказа - " + КодЗаказа + "; адрес доставки - " + СтрокаТЗ.АдресКлиента + "; сумма заказа - " + Формат(СтоимостьЗаказа, "ЧДЦ=2") + "руб.";
		
		Товары					= Документ.Товары;
		Товары.Очистить();
		Если ПустаяСтрока(Документ.Номер) Тогда
			Документ.УстановитьНовыйНомер();
		КонецЕсли;
		ЗаполнитьТовары(Документ, Товары, СтрокаТЗ.ПозицииЗаказа, ОбщиеСвойстваСтрокиТЧТовары, НоменклатураМенеджер);
		Документ.СуммаДокумента	= Товары.Итог("Сумма");
		
		ТЧОплата					= Документ.Оплата;
		ТЧОплата.Очистить();
		СтрокаОплаты				= ТЧОплата.Добавить();
		СтрокаОплаты.ВидОплаты		= ВидОплаты;
		СтрокаОплаты.СуммаОплаты	= СтоимостьЗаказа;
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Запись);
			СчетчикЗагруженныхЗаказов = СчетчикЗагруженныхЗаказов + 1;
			Документ.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить("Ошибка при создании документа " + Документ + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
		КонецПопытки;
	КонецЦикла;
	Сообщить("Обработано строк: " + Число(Счетчик + 2) + " из " + Число(Всего + 2) + ", создано документов: " + СчетчикЗагруженныхЗаказов + ", не загружено заказов: " + СчетчикНезагруженныхЗаказов, СтатусСообщения.Информация);
	Если СчетчикНезагруженныхЗаказов Тогда
		Сообщить("------------------------------", СтатусСообщения.Важное);
		Сообщить("Список незагруженных заказов: " + СокрЛП(СписокНезагруженныхЗаказов), СтатусСообщения.Важное);
	КонецЕсли;
КонецПроцедуры // ЗагрузитьВДокументы()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПреобразоватьСтрокуТекста(Знач СтрокаТекста, ЗначениеПоляПозиции)
	ПозицияНачалаПоляПозицииЗаказа		= СтрДлина(ЗначениеПоляПозиции) + 3;
	ПозицияОкончанияПоляПозицииЗаказа	= Найти(Сред(СтрокаТекста, ПозицияНачалаПоляПозицииЗаказа), """");
	ЗначениеПоляПозицииЗаказа			= Сред(СтрокаТекста, ПозицияНачалаПоляПозицииЗаказа, ПозицияОкончанияПоляПозицииЗаказа - ПозицияНачалаПоляПозицииЗаказа + 3);
	ЗначениеПоляПозицииЗаказа			= СтрЗаменить(ЗначениеПоляПозицииЗаказа, ";", "$");
	Возврат ЗначениеПоляПозиции + ";" + ЗначениеПоляПозицииЗаказа + Сред(СтрокаТекста, ПозицияОкончанияПоляПозицииЗаказа + 4);
КонецФункции // ПреобразоватьСтрокуТекста()

&НаСервереБезКонтекста
Функция СтрокуВДату(Строка)
	Возврат Дата(Число(Прав(Строка, 4)), Число(Сред(Строка, 4, 2)), Число(Лев(Строка, 2)));
КонецФункции // СтрокуВДату()

&НаСервереБезКонтекста
Функция НайтиСоздатьДокумент(КодЗаказа, ОтчетОРозничныхПродажахМенеджер)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОтчетОРозничныхПродажах.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|ГДЕ
	|	ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 14, 12) = &КодЗаказа");
	Запрос.УстановитьПараметр("КодЗаказа", КодЗаказа);
	РезультатЗапроса	= Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Документ		= ОтчетОРозничныхПродажахМенеджер.СоздатьДокумент();
	Иначе
		Выборка			= РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Документ		= Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	Возврат Документ;
КонецФункции // НайтиСоздатьДокумент()

&НаСервереБезКонтекста
Процедура ЗаполнитьТовары(Документ, Товары, Знач ПозицииЗаказа, ОбщиеСвойстваСтрокиТЧТовары, НоменклатураМенеджер)
	ПозицияРазделителя = Найти(ПозицииЗаказа, "$");
	Пока ПозицияРазделителя Цикл
		ОписаниеТовара				= СокрЛП(Лев(ПозицииЗаказа, ПозицияРазделителя - 1));
		ПозицияПробела				= Найти(ПозицииЗаказа, " ");
		
		НоваяСтрокаТЧ				= Товары.Добавить();
		НоваяСтрокаТЧ.Количество	= Число(Лев(ОписаниеТовара, ПозицияПробела - 1));
		НоваяСтрокаТЧ.Номенклатура	= ПолучитьНоменклатуру(Сред(ОписаниеТовара,ПозицияПробела + 1), НоменклатураМенеджер);
		
		Параметры					= Новый Структура("Дата,Организация,ДеятельностьНаПатенте,Склад,ТипЦен,ВалютаДокумента,КурсВзаиморасчетов,КратностьВзаиморасчетов,СуммаВключаетНДС,СтавкаНДС");
		ЗаполнитьЗначенияСвойств(Параметры, Документ);
		Параметры.СтавкаНДС = ОбщиеСвойстваСтрокиТЧТовары.СтавкаНДС;
		СведенияОНоменклатуре		= БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(НоваяСтрокаТЧ.Номенклатура, Параметры, Ложь);
		Если СведенияОНоменклатуре <> Неопределено Тогда
			НоваяСтрокаТЧ.Цена				= СведенияОНоменклатуре.ЦенаВРознице;
			НоваяСтрокаТЧ.ЕдиницаИзмерения	= СведенияОНоменклатуре.ЕдиницаИзмерения;
		КонецЕсли;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(НоваяСтрокаТЧ);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ОбщиеСвойстваСтрокиТЧТовары);
		
		ПозицииЗаказа				= СокрЛП(Сред(ПозицииЗаказа, ПозицияРазделителя + 1));
		ПозицияРазделителя			= Найти(ПозицииЗаказа, "$");
	КонецЦикла;
КонецПроцедуры // ЗаполнитьТовары()

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуру(Знач ОписаниеТовара, НоменклатураМенеджер)
	ОписаниеТовара = СокрЛП(ОписаниеТовара);
	НоменклатураМенеджер = Справочники.Номенклатура;
	Результат = НоменклатураМенеджер.НайтиПоНаименованию(ОписаниеТовара);
	Если Результат.Пустая() Тогда
		Для Счетчик = -(СтрДлина(ОписаниеТовара) - 1) По 0 Цикл
			Символ = Сред(ОписаниеТовара, -Счетчик, 1);
			Если СтрНайти("0123456789",Символ) Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Счетчик <> 0 Тогда
			Пока Счетчик <> 0 И СтрНайти("0123456789",Символ) Цикл
				Счетчик = Счетчик + 1;
				Символ = Сред(ОписаниеТовара, -Счетчик, 1);
			КонецЦикла;
			Если Счетчик <> 0 Тогда
				Результат = НоменклатураМенеджер.НайтиПоНаименованию(СокрЛП(Лев(ОписаниеТовара, -Счетчик)));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции // ПолучитьНоменклатуру()

#КонецОбласти

// финиш - 20.01.2020
